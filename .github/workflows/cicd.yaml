name: CI/CD
on:
  pull_request: {}
  push:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-24.04
    outputs:
      run-golang-ci: ${{ steps.changes.outputs.golang == 'true' }}
      run-kubernetes-ci: ${{ steps.changes.outputs.pallet == 'true' && github.event_name == 'pull_request' }}
      run-techdocs-ci: ${{ steps.changes.outputs.techdocs == 'true' || github.event_name == 'workflow_dispatch' }}
      validate-policy-bot-config: ${{ steps.changes.outputs.policy-bot == 'true' }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # pin@v3
        id: changes
        with:
          list-files: json
          filters: |
            pallet:
              - '.pallet/**'
            golang:
              - '*.go'
              - '.github/workflows/cicd.yaml'
              - '.github/workflows/mage.yaml'
              - 'docker-compose.yaml'
              - 'devtools/**'
              - 'go.*'
              - 'internal/**'
              - 'targets/**'
            techdocs:
              - 'catalog-info.yaml'
              - 'docs/**'
            policy-bot:
              - '.policy.yml'
      - name: Debug ...
        run: |
          echo ::${{ steps.changes.outputs }}
    permissions:
      contents: read
      pull-requests: read

  policy-bot:
    name: Validate policy-bot configuration
    needs: setup
    if: needs.setup.outputs.validate-policy-bot-config == 'true'
    uses: coopnorge/github-workflow-policy-bot-config-validation/.github/workflows/policy-bot-config-validation.yaml@v0
    permissions:
      contents: read
    secrets:
      policy-bot-server-url: ${{ secrets.POLICY_BOT_BASE_URL }}

  kubernetes-ci:
    name: "Kubernetes CI"
    concurrency:
      group: ${{ github.repository }}-${{ github.workflow }}-kubernetes-ci-${{ github.ref }}
      cancel-in-progress: true
    needs: ["setup"]
    if: ${{ needs.setup.outputs.run-kubernetes-ci == 'true'}}
    uses: coopnorge/github-workflow-kubernetes-validation/.github/workflows/kubernetes-validation.yaml@v2.1.2
    secrets:
      argocd-api-token: ${{ secrets.ARGOCD_API_TOKEN }}
    permissions:
      contents: read
      pull-requests: write

  mage:
    needs: ["setup"]
    if: ${{ needs.setup.outputs.run-golang-ci == 'true'}}
    uses: ./.github/workflows/mage.yaml
    permissions:
      contents: read
      id-token: write
      packages: read
    secrets: inherit
    with:
      go-runtime: local

  techdocs:
    needs: ["setup"]
    if: ${{ needs.setup.outputs.run-techdocs-ci == 'true'}}
    permissions:
      contents: read
      id-token: write
      packages: read
      pull-requests: read
    name: TechDocs
    uses: coopnorge/github-workflow-techdocs/.github/workflows/techdocs.yaml@v0

  cicd:
    needs:
      - kubernetes-ci
      - mage
      - techdocs
      - policy-bot
    if: always()
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - run: exit 1
        name: "Catch errors"
        if: |
          needs.kubernetes-ci.result == 'failure' ||
          needs.techdocs.result == 'failure' ||
          needs.mage.result == 'failure' ||
          needs.policy-bot.result == 'failure' ||
          needs.policy-bot.result == 'cancelled'
